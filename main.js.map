{"version":3,"sources":["./src/app/components/asctb-compare/asctb-table-view/asctb-table-view.component.html","./src/app/components/asctb-compare/asctb-table-view/asctb-table-view.component.ts","./src/app/components/app.component.ts","./src/app/components/app.component.html","./src/environments/environment.ts","./src/app/components/asctb-compare/asctb-tree-view/asctb-tree-view.component.ts","./src/app/components/asctb-compare/asctb-tree-view/asctb-tree-view.component.html","./src/app/services/asctb-compare.service.ts","./src/app/components/asctb-compare/asctb-compare.component.html","./src/app/components/asctb-compare/asctb-compare.component.ts","./src/app/services/ajax/sparc-asctb-ajax.service.ts","./src/app/components/asctb-compare/asctb-treemap-view/asctb-treemap-view.component.ts","./src/app/components/asctb-compare/asctb-treemap-view/asctb-treemap-view.component.html","./src/app/app.module.ts","./src/app/components/asctb-compare/asctb-scatterplot-view/asctb-scatterplot-view.component.ts","./src/app/components/asctb-compare/asctb-scatterplot-view/asctb-scatterplot-view.component.html","./src/app/components/mast/mast.component.ts","./src/app/components/mast/mast.component.html","./src/app/components/asctb-compare/color-legend/color-legend.component.ts","./src/app/components/asctb-compare/color-legend/color-legend.component.html","./src/app/components/asctb-generate/asctb-generate.component.html","./src/app/components/asctb-generate/asctb-generate.component.ts","./src/app/components/asctb-compare/asctb-compare-sidebar/asctb-compare-sidebar.component.html","./src/app/components/asctb-compare/asctb-compare-sidebar/asctb-compare-sidebar.component.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<div fxLayout=\"row\" fxLayoutAlign=\"start start\" class=\"fixed-stage-height\" fxFlex>\n    <table mat-table [dataSource]=\"asctbCompareService.mergedTableArr\" fxFlex> <!-- *ngIf=\"asctbCompareService.mergedTableArr.length > 0\"-->\n        <ng-container matColumnDef=\"id\">\n            <th class=\"header-font w-m175\" mat-header-cell *matHeaderCellDef> <a (click)=\"sortByColumn('id')\">ID</a> </th>\n            <td mat-cell *matCellDef=\"let organ\"> {{getOrganIdReadable(organ.id)}} </td>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"name\">\n            <th class=\"header-font w-m75\" mat-header-cell *matHeaderCellDef> <a (click)=\"sortByColumn('name')\">Name</a> </th>\n            <td mat-cell *matCellDef=\"let organ\"> {{organ.name}} </td>\n        </ng-container>\n\n        <!-- Label Column -->\n        <!--<ng-container matColumnDef=\"label\">\n            <th class=\"header-font w-m75\" mat-header-cell *matHeaderCellDef> Label </th>\n            <td mat-cell *matCellDef=\"let organ\"> {{organ.label}} </td>\n        </ng-container>-->\n\n        <!-- HuBMAP Column -->\n        <ng-container matColumnDef=\"hubmap\">\n            <th class=\"header-font w-m75 center-text\" mat-header-cell *matHeaderCellDef>\n                <img width=\"50px\" class=\"hubmap-logo\" src=\"assets/img/hubmap-logo.svg\"> \n            </th>\n            <td mat-cell *matCellDef=\"let organ\" class=\"center-text\"> \n                <mat-icon class=\"color-green font-size-32 pointer\" *ngIf=\"organ.hubmapResident\" matTooltip=\"This anatomical structure is present in HuBMAP\">check</mat-icon>\n                <mat-icon class=\"color-maroon font-size-32 pointer\" *ngIf=\"!organ.hubmapResident\" matTooltip=\"This anatomical structure is not present in HuBMAP\">close</mat-icon>\n            </td>\n        </ng-container>\n\n        <!-- SPARC Column -->\n        <ng-container matColumnDef=\"sparc\">\n            <th class=\"header-font-small w-m75 center-text\" mat-header-cell *matHeaderCellDef> \n                <img width=\"50px\" class=\"sparc-logo\" src=\"assets/img/sparc-logo.svg\"> \n            </th>\n            <td mat-cell *matCellDef=\"let organ\" class=\"center-text\"> \n                <mat-icon class=\"color-green font-size-32 pointer\" *ngIf=\"organ.sparcResident\" matTooltip=\"This anatomical structure is present in SPARC\">check</mat-icon>\n                <mat-icon class=\"color-maroon font-size-32 pointer\" *ngIf=\"!organ.sparcResident\" matTooltip=\"This anatomical structure is not present in SPARC\">close</mat-icon>\n            </td>\n        </ng-container>\n\n\n        <!-- CellTypes Column -->\n        <ng-container matColumnDef=\"cellTypes\">\n            <th class=\"header-font w-m275 center-text\" mat-header-cell *matHeaderCellDef> Cell Types </th>\n            <td mat-cell *matCellDef=\"let organ\">\n                <mat-chip-list>\n                    <mat-chip *ngFor=\"let celltype of organ.hubmapCellTypes| slice:0:6; let i=index\" matTooltip=\"{{celltype.id}}\"> \n                        {{celltype.name}} \n                    </mat-chip>\n                    <mat-chip *ngIf=\"organ.hubmapCellTypes.length > 6\">\n                        {{organ.hubmapCellTypes.length-6}} more...\n                    </mat-chip>\n                </mat-chip-list>\n            </td>\n        </ng-container>\n\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n        <tr mat-row [ngClass]=\"{'background-sparc' : row.sparcResident && !row.hubmapResident, 'background-hubmap' : !row.sparcResident && row.hubmapResident}\" *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Organ } from 'src/app/interfaces/organ';\nimport { AsctbCompareService } from 'src/app/services/asctb-compare.service';\n\n@Component({\n  selector: 'app-asctb-table-view',\n  templateUrl: './asctb-table-view.component.html',\n  styleUrls: ['./asctb-table-view.component.css']\n})\nexport class AsctbTableViewComponent implements OnInit {\n\n  constructor(public asctbCompareService: AsctbCompareService) { }\n\n  public displayedColumns: string[] = ['id', 'name', 'hubmap', 'sparc', 'cellTypes']; //'sharedCellTypes', 'hubmapCellTypes', 'sparcCellTypes', 'label'\n\n  ngOnInit(): void {\n  }\n\n  sortByColumn(columnName: string){\n    this.asctbCompareService.mergedTableArr.sort((a, b) => (a[columnName] > b[columnName]) ? 1 : ((b[columnName] > a[columnName]) ? -1 : 0));\n  }\n  \n  getOrganIdReadable(id:string): string{\n    return (id.indexOf('SURROGATE_ID') > -1)? '<NONE>': id;\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'hubmap-sparc';\n}\n","<app-mast></app-mast>\n<router-outlet></router-outlet>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\n\nimport * as d3 from 'd3';\nimport { AsctbCompareService } from 'src/app/services/asctb-compare.service';\n\n@Component({\n  selector: 'app-asctb-tree-view',\n  templateUrl: './asctb-tree-view.component.html',\n  styleUrls: ['./asctb-tree-view.component.css']\n})\nexport class AsctbTreeViewComponent implements OnInit, OnChanges  {\n\n  @Input() asTree;\n\n  constructor(private asctbCompareService: AsctbCompareService) { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void{\n    this.generateTree();\n  }\n\n\n  margin:{left:number, right:number, top:number, bottom:number};  \n  width:number;\n  height:number;\n  barHeight:number;\n  barWidth:number;\n  i:number;\n  duration:number;\n  tree;\n  root;\n  svg;\n\n  generateTree() {\n    //Short-circuit when no data is available\n    if(!this.asTree) return;\n\n    // Set the dimensions and margins of the diagram\n    var element = d3.select('#treeview-div').node();\n    let wWidth = element.getBoundingClientRect().width;\n    let wHeight = element.getBoundingClientRect().height;\n    \n    let heightDynamicScale = Math.ceil((this.asctbCompareService.countTotalAS / 50) * element.getBoundingClientRect().height);\n\n    wHeight = (wHeight > heightDynamicScale)?wHeight: heightDynamicScale;\n\n\n    this.margin = {top: 20, right: 90, bottom: 20, left: 90};\n    this.width = wWidth - this.margin.right - this.margin.left;\n    this.height = wHeight - this.margin.top - this.margin.bottom;\n    this.barHeight = 20;\n    this.barWidth = this.width *.8;\n    this.i = 0;\n    this.duration = 750;\n    this.tree = d3.tree().size([this.width, this.height]);\n    // this.tree = tree().nodeSize([0, 30]);\n\n    this.tree = d3.tree().nodeSize([0, 30]); \n    this.root = this.tree(d3.hierarchy(this.asTree, function(d) {\n      return d.asAcyclicalChildren;\n      //return new Set([...d.asHubmapChildren, ...d.asSparcChildren, ...d.asSharedChildren]);\n    }));\n    this.root.each((d)=> {\n      d.name = d.id; //transferring name to a name variable\n      d.id = this.i; //Assigning numerical Ids\n      this.i++;\n    });\n    this.root.x0 = this.root.x;\n    this.root.y0 = this.root.y\n    d3.selectAll(\"#treeview-div > *\").remove();\n\n    this.svg = d3.select('#treeview-div').append('svg')\n      .attr('width', this.width + this.margin.right + this.margin.left)\n      .attr('height', this.height + this.margin.top + this.margin.bottom)\n      .append('g')\n      .attr('transform', 'translate(' + this.margin.left + ',' + this.margin.top + ')');\n\n    \n\n  \n    let connector = function(d:any) {\n    //curved \n    /*return \"M\" + d.y + \",\" + d.x +\n        \"C\" + (d.y + d.parent.y) / 2 + \",\" + d.x +\n        \" \" + (d.y + d.parent.y) / 2 + \",\" + d.parent.x +\n        \" \" + d.parent.y + \",\" + d.parent.x;*/\n      //straight\n      return \"M\" + d.parent.y + \",\" + d.parent.x\n        + \"V\" + d.x + \"H\" + d.y;      \n    }\n  \n    let collapse = (d) => {\n      if (d.children) {\n        d._children = d.children;\n        d._children.forEach(collapse);\n        d.children = null;\n      }\n    };\n\n    let click = (d) => {\n      if (d.children) {\n        d._children = d.children;\n        d.children = null;\n      } else {\n        d.children = d._children;\n        d._children = null;\n      }\n      update(d);\n    };\n\n    var update = (source) => {\n\n      this.width=800;\n\n      // Compute the new tree layout.\n      let nodes = this.tree(this.root)\n      let nodesSort = [];\n      nodes.eachBefore(function (n) {\n        nodesSort.push(n);\n      });\n      this.height = Math.max(500, nodesSort.length * this.barHeight + this.margin.top + this.margin.bottom);\n      let links = nodesSort.slice(1);\n      // Compute the \"layout\".\n      nodesSort.forEach ((n,i)=> {\n        n.x = i *this.barHeight;\n      });\n\n      d3.select('svg').transition()\n        .duration(this.duration)\n        .attr(\"height\", this.height);\n\n      // Update the nodes…\n      let node = this.svg.selectAll('g.node')\n      .data(nodesSort, function (d: any) {\n        return d.id || (d.id = ++this.i);\n      });\n\n      // Enter any new nodes at the parent's previous position.\n      var nodeEnter = node.enter().append('g')\n      .attr('class', 'node')\n      .attr('transform', function () {\n        return 'translate(' + source.y0 + ',' + source.x0 + ')';\n      })\n      .on('click', click);\n\n      // Shared = white\n      // Hubmap = blue\n      // Sparc = olive\n      let nodeFillColor = (node) =>{\n        if(node.data.sparcResident && node.data.hubmapResident) { return \"#fff\"; }\n        else if(!node.data.sparcResident && node.data.hubmapResident) { return \"rgb(144, 158, 121)\"; }\n        else { return \"rgb(69, 59, 134)\"; }\n      }\n\n      nodeEnter.append('circle')\n        .attr('class', (d)=>{\n          let classStr = 'node';\n            if(!d.data.sparcResident && d.data.hubmapResident) { classStr += \" hubmap\"; }\n            else if(d.data.sparcResident && !d.data.hubmapResident) { classStr += \" sparc\"; }\n          return classStr;\n        })\n        .attr('r', 1e-6)\n        .style(\"fill\", function(d) {\n          return nodeFillColor(d);\n        });\n\n      nodeEnter.append('text')\n        .attr('x', function (d: any) {\n        return d.children || d._children ? 10 : 10;\n      })\n        .attr('dy', '.35em')\n        .attr('text-anchor', function (d: any) {\n        return d.children || d._children ? 'start' : 'start';\n      })\n        .text(function (d: any) {\n          let id = (d.data.id.indexOf('SURROGATE')>-1)?'<NONE>':d.data.id;\n          return d.data.name + ' (' + id + ')';\n      })\n      .style('fill-opacity', 1e-6);\n\n      nodeEnter.append('svg:title').text(function (d: any) {\n        return d.data.name;\n      });\n\n      // Transition nodes to their new position.\n      let nodeUpdate = node.merge(nodeEnter)\n        .transition()\n        .duration(this.duration);\n      \n      nodeUpdate\n          .attr('transform', function (d: any) {\n          return 'translate(' + d.y + ',' + d.x + ')';\n        });\n\n      nodeUpdate.select('circle')\n        .attr('r', 4.5)\n        .style(\"fill\", function(d) {\n          return nodeFillColor(d);\n        });\n      \n      nodeUpdate.select('text')\n        .style('fill-opacity', 1);\n\n      // Transition exiting nodes to the parent's new position (and remove the nodes)\n      var nodeExit = node.exit().transition()\n      .duration(this.duration);\n      \n      nodeExit\n      .attr('transform', function (d) {\n        return 'translate(' + source.y + ',' + source.x + ')';\n      })\n      .remove();\n\n      nodeExit.select('circle')\n        .attr('r', 1e-6);\n\n      nodeExit.select('text')\n        .style('fill-opacity', 1e-6);\n      \n      // Update the links…\n      var link = this.svg.selectAll('path.link')\n      .data(links, function (d: any) {\n        // return d.target.id;\n        var id = d.id + '->' + d.parent.id;\n        return id;\n      }\n          );\n\n      // Enter any new links at the parent's previous position.\n      let linkEnter = link.enter().insert('path', 'g')\n      .attr('class', function(d){\n        let classesStr = \"link\";\n        if(d.parent.data.asSparcChildren.has(d.data)){ classesStr += \" sparc\" }\n        if(d.parent.data.asHubmapChildren.has(d.data)){ classesStr += \" hubmap\" }\n        return classesStr;\n      })\n      .attr('d', (d) => {\n        var o = {x: source.x0, y: source.y0, parent: {x: source.x0, y: source.y0}};\n        return connector(o);\n      });\n      \n      // Transition links to their new position.\n      link.merge(linkEnter).transition()\n        .duration(this.duration)\n        .attr('d', connector);\n\n\n      // // Transition exiting nodes to the parent's new position.\n      link.exit().transition()\n        .duration(this.duration)\n        .attr('d', (d: any) => {\n        var o = {x: source.x, y: source.y, parent: {x: source.x, y: source.y}};\n        return connector(o);\n      })\n        .remove();\n\n      // Stash the old positions for transition.\n      nodesSort.forEach(function (d: any) {\n        d.x0 = d.x;\n        d.y0 = d.y;\n      });\n      \n    }\n\n    // this.root.children.forEach(this.collapse);\n    update(this.root);\n  }\n}\n","<div id=\"treeview-div\" class=\"fixed-stage-height background-white\" fxFlex></div>\n","import { Injectable } from '@angular/core';\nimport { SparcAsctbAjaxService } from './ajax/sparc-asctb-ajax.service';\nimport { Organ } from 'src/app/interfaces/organ';\nimport { CellType } from '../interfaces/cellType';\n\n/*******************************************************************************************\n * @Author Samuel O'Blenes\n * @Date 7/15/21\n * This service maintains UI state, data, and associated business logic for the ASCT+B\n * comparison views\n *******************************************************************************************/\n@Injectable({\n  providedIn: 'root'\n})\nexport class AsctbCompareService {\n\n  //View type currently selected by the user\n  selectedViewType:string; // = 'table';\n  //Organ type currently selected by the user\n  selectedOrganType = 'UBERON:0000948';\n  //Human-readable data status string ['Not ready'|'Loading'|'Ready']\n  dataLoadStatus = 'Not ready';\n  //Selectable organ types in the UI control (@TODO: Externalize this to a resource file)\n  organTypes = [\n    {\n      name:'Heart', \n      id:'UBERON:0000948', \n      sparcUri:'assets/data/sparc_heart.json', //'https://raw.githubusercontent.com/SPARC-FAIR-Codeathon/hubmap-link/features/export_asctb_csv/data/sparc_heart.json',\n      hubmapUri:'https://asctb-api.herokuapp.com/v2/1tK916JyG5ZSXW_cXfsyZnzXfjyoN-8B2GXLbYD6_vF0/1240281363'\n    },{\n      name:'Brain', \n      id:'UBERON:0000955', \n      sparcUri: 'assets/data/sparc_brain.json', //'https://raw.githubusercontent.com/SPARC-FAIR-Codeathon/hubmap-link/features/export_asctb_csv/data/sparc_brain.json',\n      hubmapUri:'https://asctb-api.herokuapp.com/v2/1tK916JyG5ZSXW_cXfsyZnzXfjyoN-8B2GXLbYD6_vF0/345174398'\n    },{\n      name:'Kidney', \n      id:'UBERON:0002113', \n      sparcUri:'assets/data/sparc_kidney.json', //'https://raw.githubusercontent.com/SPARC-FAIR-Codeathon/hubmap-link/features/export_asctb_csv/data/sparc_kidney.json',\n      hubmapUri:'https://asctb-api.herokuapp.com/v2/1tK916JyG5ZSXW_cXfsyZnzXfjyoN-8B2GXLbYD6_vF0/1760639962'\n    },{\n      name:'Large intestine', \n      id:'UBERON:0000059', \n      sparcUri:'assets/data/sparc_large-intestine.json', //'https://raw.githubusercontent.com/SPARC-FAIR-Codeathon/hubmap-link/features/export_asctb_csv/data/sparc_large-intestine.json',\n      hubmapUri:'https://asctb-api.herokuapp.com/v2/1tK916JyG5ZSXW_cXfsyZnzXfjyoN-8B2GXLbYD6_vF0/1687995716'\n    },{\n      name:'Lymph nodes', \n      id:'UBERON:0000029', \n      sparcUri:'assets/data/sparc_lymph-nodes.json', //'https://raw.githubusercontent.com/SPARC-FAIR-Codeathon/hubmap-link/features/export_asctb_csv/data/sparc_lymph-nodes.json',\n      hubmapUri:'https://asctb-api.herokuapp.com/v2/1tK916JyG5ZSXW_cXfsyZnzXfjyoN-8B2GXLbYD6_vF0/272157091'\n    }\n  ];\n\n  //Organ hierarchial data\n  sparcRawOrganData = null;\n  hubmapRawOrganData = null;\n\n  //Dataset summary statistics\n  countTotalAS:number = 0;\n  countSparcAS:number = 0;\n  countHubmapAS:number = 0;\n  countSharedAS:number = 0;\n  countSparcASLinks:number = 0;\n  countHubmapASLinks:number = 0;\n  countSharedASLinks:number = 0;\n\n  /*************************************************************************************\n   * Data tree structure representing organ data from both sparc and hubmap.\n   *************************************************************************************/\n  mergedOrganData: Organ = null;\n  mergedOrganIdx: any = {}; //id:Organ index\n  mergedCellTypeIdx: any = {}; //id:CellType index\n\n  /*************************************************************************************\n   * Data structure suitable for table presentation\n   *************************************************************************************/\n  mergedTableArr = [];\n\n  /*************************************************************************************\n   * Data structure for D3 force-directed graph presentation\n   *************************************************************************************/\n  fdNodes = []; // {id: \"UBERON:00012345\", group: 1, organ:{...}}\n  fdEdges = []; // {source: \"UBERON:00012345\", target: \"UBERON:00012346\", value: 1}\n\n  constructor(private sparcAsctbAjaxService: SparcAsctbAjaxService) {}\n\n  /*************************************************************************************\n   * Fetch data for the selected organ from SPARC and HuBMAP. After data has been\n   * loaded from both sources, execute a merge to construct the consolidated object\n   * for presentation.\n   *************************************************************************************/\n  public loadOrganData(){\n    //Get the selected organ type object\n    let selectedOrganObj = this.organTypes.find((t)=>{return t.id === this.selectedOrganType});\n\n    //Reset the data references\n    this.sparcRawOrganData = null;\n    this.hubmapRawOrganData = null;\n    this.mergedOrganData = null;\n    this.mergedOrganIdx = {};\n    this.countTotalAS = 0;\n\n    this.countSparcAS = 0;\n    this.countHubmapAS = 0;\n    this.countSharedAS = 0;\n\n    this.countSparcASLinks = 0;\n    this.countHubmapASLinks = 0;\n    this.countSharedASLinks = 0;\n\n    //Update the data loading status\n    this.dataLoadStatus = 'Loading';\n\n    //Fetch sparc data if a data uri is available\n    if(selectedOrganObj.sparcUri){\n      this.sparcAsctbAjaxService.fetchGenericJson(selectedOrganObj.sparcUri).subscribe({\n          next: (response:any) => {\n            this.sparcRawOrganData = response;\n            if(this.hubmapRawOrganData != null){\n              this.restructureRawOrganData(); // Execute merge only if hubmap data is also ready\n            }\n          },\n          error: (error) => { console.error(error); }\n        });\n    }\n\n    //Fetch HuBMAP data if a data uri is available\n    if(selectedOrganObj.hubmapUri){\n      this.sparcAsctbAjaxService.fetchGenericJson(selectedOrganObj.hubmapUri).subscribe({\n        next: (response:any) => { \n          this.hubmapRawOrganData = response;\n          if(this.sparcRawOrganData != null){\n            this.restructureRawOrganData(); // Execute merge only if sparc data is also ready\n          }\n        },\n        error: (error) => { console.error(error); }\n      });\n    }\n  }\n\n\n  /*************************************************************************************\n   * Restructure sparc, hubmap data into forms useful for presentation\n   *************************************************************************************/\n   private restructureRawOrganData(){\n\n    //Create one consolidated merged object that conforms to the Organ interface\n    this.mergeRawOrganData();\n\n    //Create a derivative data structure suitable for table presentation\n    this.generateTableArr();\n\n    //Create node and edge datastructures for a force directed view\n    this.generateForcedDirectedDatasets();\n\n    //Update the data loading status\n    this.dataLoadStatus = 'Ready';\n\n    //Render data to console for inspection\n    console.log(\"mergedOrganData:\");\n    console.dir(this.mergedOrganData);\n\n    console.log(\"mergedOrganIndex:\");\n    console.dir(this.mergedOrganIdx);\n\n    console.log(\"mergedTableArr:\");\n    console.dir(this.mergedTableArr)\n\n   }\n\n  /*************************************************************************************\n   * Merge raw data objects from SPARC and HuBMAP into a consolidated reportable format\n   *************************************************************************************/\n  private mergeRawOrganData(){\n\n    /*************************************************************************************\n     * Step 1: Initialize and index merged organ objects without edge data\n     *************************************************************************************/\n\n    //Construct an index on id:node for each sparc organ\n    let sparcOrganIdx = {};\n    this.indexSparcOrganTree(sparcOrganIdx, this.sparcRawOrganData);\n\n    //Construct an index on id:node for each hubmap organ\n    //Iterate over hubmap organs and initialize any that do not already exist\n    //Hubmap data is represented as rows of objects with an anatomical structures array\n    let hubmapOrganIdx = {};\n    this.hubmapRawOrganData.data.forEach((rowObj: any)=>{\n      rowObj.anatomical_structures.forEach(organ => {\n        //Hubmap anatomical structures have form {id: \"UBERON:0000948\", name: \"heart\", rdfs_label: \"heart\"}\n        //Some Hubmap organs do not have an ID but do have a name. When this occurs, create a surrogate \"smart\" ID\n        if(!organ.id || organ.id == ''){\n          organ.id = 'SURROGATE_ID:' + organ.name.toUpperCase();\n        }\n        hubmapOrganIdx[organ.id] = organ;\n      });\n    });\n\n    //Iterate over sparc organs and initialize merged organ objects\n    Object.values(sparcOrganIdx).forEach((sparcOrgan: any)=>{\n      let mergedOrgan:Organ = this.initializeMergedOrgan(sparcOrgan.id, sparcOrgan.name, sparcOrgan.label, true, (sparcOrgan.id in hubmapOrganIdx));\n      this.mergedOrganIdx[mergedOrgan.id] = mergedOrgan;\n    });\n    //Iterate over hubmap organs and initialize any that do not already exist\n    //Hubmap data is represented as rows of objects with an anatomical structures array\n    Object.values(hubmapOrganIdx).forEach((hubmapOrgan:any) =>{\n      //If organ does not exist yet in the merged index, add it\n      if(!this.mergedOrganIdx[hubmapOrgan.id]){\n        let mergedOrgan:Organ = this.initializeMergedOrgan(hubmapOrgan.id, hubmapOrgan.name, hubmapOrgan.rdfs_label, false, true);\n        this.mergedOrganIdx[mergedOrgan.id] = mergedOrgan;\n      }\n    });\n\n    //Point mergedOrganData at the root node\n    this.mergedOrganData = this.mergedOrganIdx[this.sparcRawOrganData.id]\n\n    /*************************************************************************************\n     * Step 2: Add edge data to mergedOrganData\n     *************************************************************************************/\n    //Iterate over all merged organs and look up child references\n    Object.values(this.mergedOrganIdx).forEach((mergedOrgan:Organ) =>{\n      //Add child references from sparc data if the organ is in the sparc set\n      if(mergedOrgan.id in sparcOrganIdx){\n        let sparcOrgan = sparcOrganIdx[mergedOrgan.id];\n        if(sparcOrgan.children && sparcOrgan.children.length > 0){\n          sparcOrgan.children.forEach(childSparcOrgan => {\n            mergedOrgan.asSparcChildren.add(this.mergedOrganIdx[childSparcOrgan.id]);\n          });\n        }\n      }\n\n      //Add child references from hubmap data\n      this.hubmapRawOrganData.data.forEach((rowObj: any)=>{\n        //We need to walk the array c-style because children require index look-ahead\n        for(let i=0; i < rowObj.anatomical_structures.length; i++){\n          let hubmapOrgan = rowObj.anatomical_structures[i];\n\n          //For each hubmap organ encountered, determine if there is a cell to the right of it, which contains the child\n          if(mergedOrgan.id === hubmapOrgan.id && i+1 < rowObj.anatomical_structures.length){\n            let hubmapChildOrgan = rowObj.anatomical_structures[i+1];\n            mergedOrgan.asHubmapChildren.add(this.mergedOrganIdx[hubmapChildOrgan.id]);\n          }\n          //Add Cell types to the merged Organ from Hubmap\n          if(mergedOrgan.id === hubmapOrgan.id && rowObj.cell_types){\n            rowObj.cell_types.forEach((hubmapCt)=>{\n              //Pull the celltype reference from the index if it exists, otherwise initialize it\n              //Assign a surrogate id if it is missing\n              let ctId = hubmapCt.id || 'SURROGATE_ID:'+hubmapCt.name;\n              let cellType:CellType = (ctId in this.mergedCellTypeIdx) ? \n                this.mergedCellTypeIdx[ctId] : \n                this.initializeMergedCellType(ctId, hubmapCt.name, hubmapCt.rfs_label);\n                this.mergedCellTypeIdx[ctId] = cellType;\n                mergedOrgan.ctHubmapChildren.add(cellType);\n            });\n          }\n        }\n      });\n      \n      /*************************************************************************************\n      * Step 3:At this point, asHubmapChildren and asSparcChildren are now populated with \n      * the respective children of the two datasets. However, we need to populate \n      * asSharedChildren with the intersection of these two sets, and subtract shared \n      * children from each of the source-specific sets.\n      **************************************************************************************/\n\n      mergedOrgan.asAllChildren = new Set([...mergedOrgan.asHubmapChildren, ...mergedOrgan.asSparcChildren]);\n      //Calculate intersection of the two sets and assign to sharedChildren\n      mergedOrgan.asSharedChildren = new Set([...mergedOrgan.asHubmapChildren].filter(x => mergedOrgan.asSparcChildren.has(x)))\n      //Calculate subtraction of sharedChildren from hubmapChildren \n      mergedOrgan.asHubmapChildren = new Set([...mergedOrgan.asHubmapChildren].filter(x => !mergedOrgan.asSharedChildren.has(x)))\n      //Calculate subtraction of sharedChildren from sparcChildren \n      mergedOrgan.asSparcChildren = new Set([...mergedOrgan.asSparcChildren].filter(x => !mergedOrgan.asSharedChildren.has(x)))\n\n\n\n      //Object.values(this.mergedOrganIdx).forEach((mergedOrgan:Organ) =>{\n\n\n\n\n\n\n\n      //Update summary statistics\n      this.countSparcASLinks += mergedOrgan.asSparcChildren.size;\n      this.countHubmapASLinks += mergedOrgan.asHubmapChildren.size;\n      this.countSharedASLinks += mergedOrgan.asSharedChildren.size;\n\n      //TODO: construct cell-type sets\n      //console.dir(mergedOrgan.asSparcChildren);\n    });\n\n    /*************************************************************************************\n     * Step 4: Walk the merged organ tree and populate maxDepth, parents, \n     * asAcyclicalChildren\n     *************************************************************************************/\n    this.augmentMergedOrganNode(this.mergedOrganData, null, new Set<Organ>());\n\n    //How many nodes have multiple parents?\n    let multiParentArr = Object.values(this.mergedOrganIdx).filter((organ: Organ)=>{\n      return organ.asParents.size > 1;\n    })\n    console.log('multiple parents? ' + multiParentArr.length);\n    console.dir(multiParentArr);\n    \n    //console.dir(this.countSparcASLinks)\n\n    this.countTotalAS = Object.keys(this.mergedOrganIdx).length;\n    this.countSparcAS = Object.values(this.mergedOrganIdx).filter((organ:Organ) => organ.sparcResident && !organ.hubmapResident).length;\n    this.countHubmapAS = Object.values(this.mergedOrganIdx).filter((organ:Organ) => !organ.sparcResident && organ.hubmapResident).length;\n    this.countSharedAS = Object.values(this.mergedOrganIdx).filter((organ:Organ) => organ.sparcResident && organ.hubmapResident).length;\n    \n  }\n\n  /*************************************************************************************\n   * Structure merged index data to table-ready array for UI presentation\n   * Table will have the following columns:\n   * ID | Name | Label | Shared Cell Types | HuBMAP Cell Types | Sparc Cell Types\n   *************************************************************************************/\n  private generateTableArr(){\n    this.mergedTableArr = [];\n    Object.values(this.mergedOrganIdx).forEach((organ:Organ)=>{\n      this.mergedTableArr.push({\n        id: organ.id,\n        name: organ.name,\n        label: organ.label,\n        sharedCellTypes: [],\n        hubmapCellTypes: Array.from(organ.ctHubmapChildren),\n        sparcCellTypes: [],\n        sparcResident: organ.sparcResident,\n        hubmapResident: organ.hubmapResident\n      });\n    });\n\n    //Sort by 1) HubmapResident, 2) SparcResident, 3) Name\n    this.mergedTableArr.sort((a, b) => (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0));\n    this.mergedTableArr.sort((a, b) => (a.sparcResident > b.sparcResident) ? -1 : ((b.sparcResident > a.sparcResident) ? 1 : 0));\n    this.mergedTableArr.sort((a, b) => (a.hubmapResident > b.hubmapResident) ? -1 : ((b.hubmapResident > a.hubmapResident) ? 1 : 0));\n  }\n\n  /*************************************************************************************\n   * Structure merged index data to force directed graph arrays for UI presentation\n   *************************************************************************************/\n   private generateForcedDirectedDatasets(){\n    this.fdNodes = []; // {id: \"UBERON:00012345\", group: 1, organ:{...}}\n    this.fdEdges = []; // {source: \"UBERON:00012345\", target: \"UBERON:00012346\", value: 1}\n    Object.values(this.mergedOrganIdx).forEach((organ:Organ)=>{\n      this.fdNodes.push({id:organ.id, group:((organ.sparcResident && organ.hubmapResident)?1: (!organ.sparcResident && organ.hubmapResident)?2: 3), organ:organ});\n      organ.asAllChildren.forEach((childOrgan)=>{\n        this.fdEdges.push({source:childOrgan.id, target:organ.id, value:1});\n      });\n    });\n  }\n\n  /*************************************************************************************\n   * Depth-first walk of sparc organ tree datastructure to construct an id:organ index\n   *************************************************************************************/\n  private indexSparcOrganTree(idx, node){\n    idx[node.id] = node;\n    if(node.children && node.children.length > 0){\n      node.children.forEach(organ => {\n        this.indexSparcOrganTree(idx, organ);\n      });\n    }\n  }\n\n  /*************************************************************************************\n   * Depth-first walk of merged organ tree to populate maxDepth, asParents, and\n   * asAcyclicalChildren\n   *************************************************************************************/\n  private augmentMergedOrganNode(node: Organ, parent: Organ, visitedSet: Set<Organ>){\n    visitedSet.add(node); //Add this node to the visited set so that we do not revisit\n    if(parent){\n      \n      //Find parent with maximum depth. Add as child of that parent. Remove from children of other parents\n      let deepestParent = Array.from(node.asParents).reduce(function(prev, current) {\n          return (prev.maxDepth > current.maxDepth) ? prev : current\n      });\n      //Only deepest parent may claim this node as its child\n      deepestParent.asAcyclicalChildren.add(node);\n      node.asParents.forEach((parent)=>{\n        if(parent !== deepestParent){\n          parent.asAcyclicalChildren.delete(node);\n        }\n      });\n      node.maxDepth = deepestParent.maxDepth+1;\n    } else { //Root node gets depth 0\n      node.maxDepth = 0;\n    }\n    //Iterate on next node\n    node.asAllChildren.forEach((child)=>{\n      child.asParents.add(node);\n      if(!visitedSet.has(child)){\n        this.augmentMergedOrganNode(child, node, visitedSet);\n      }\n    });\n  }\n\n\n\n  /*************************************************************************************\n   * Utility function to create an object conforming to the Organ interface\n   *************************************************************************************/\n   private initializeMergedOrgan(id:string, name:string, label:string, sparcResident:boolean, hubmapResident:boolean): Organ{\n    return {\n      id: id,\n      name: name,\n      label: label,\n      maxDepth: -1,\n      sparcResident: sparcResident,\n      hubmapResident: hubmapResident,\n      //Initialize, but do not assign the children sets yet\n      asParents: new Set(),\n      asAcyclicalChildren: new Set(),\n      asAllChildren: new Set(),\n      asSparcChildren: new Set(),\n      asHubmapChildren: new Set(),\n      asSharedChildren: new Set(),\n      ctSparcChildren: new Set(),\n      ctHubmapChildren: new Set(),\n      ctSharedChildren: new Set()\n    };\n  }\n\n  /*************************************************************************************\n   * Utility function to create an object conforming to the CellType interface\n   *************************************************************************************/\n   private initializeMergedCellType(id:string, name:string, label:string): CellType{\n    return {\n      id: id,\n      name: name,\n      label: label\n    };\n  }\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"start start\">\n    <app-asctb-compare-sidebar></app-asctb-compare-sidebar>\n\n    \n    <div fxFlex>\n        <app-asctb-scatterplot-view *ngIf=\"asctbCompareService.selectedViewType=='graph'\" [fdNodes]=\"asctbCompareService.fdNodes\" [fdEdges]=\"asctbCompareService.fdEdges\"></app-asctb-scatterplot-view>\n        <app-asctb-table-view *ngIf=\"asctbCompareService.selectedViewType=='table'\"></app-asctb-table-view>\n        <app-asctb-tree-view *ngIf=\"asctbCompareService.selectedViewType=='tree'\" [asTree]='asctbCompareService.mergedOrganData'></app-asctb-tree-view>\n        <app-asctb-treemap-view *ngIf=\"asctbCompareService.selectedViewType=='treemap'\" [asTree]='asctbCompareService.mergedOrganData'></app-asctb-treemap-view>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AsctbCompareService } from 'src/app/services/asctb-compare.service';\n\n@Component({\n  selector: 'app-asctb-compare',\n  templateUrl: './asctb-compare.component.html',\n  styleUrls: ['./asctb-compare.component.css']\n})\nexport class AsctbCompareComponent implements OnInit {\n\n  constructor(public asctbCompareService: AsctbCompareService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n/*******************************************************************************************\n * @Author Samuel O'Blenes\n * @Date 7/15/21\n * This service retrieves data from remote sources.\n *******************************************************************************************/\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SparcAsctbAjaxService {\n  constructor(private http: HttpClient) { }\n\n  /**********************************************************************\n   * Returns a promise on the ajax call response\n   **********************************************************************/\n  public fetchGenericJson(uri: string) {\n    return this.http.get(uri, {responseType: 'json'});\n  }\n\n\n  /***************************************************************************************************\n   * Execute a request against scigraph for partonomy data in relationship to the provided identifier\n   * Returns a promise on the ajax call response \n   * relationshipType: http://purl.obolibrary.org/obo/BFO_0000050\n   ***************************************************************************************************/\n   public fetchSparcPartonomy(organIdentifier: string, relationshipType: string) {\n    let uri = 'https://scicrunch.org/api/1/scigraph/graph/neighbors/'\n      + organIdentifier\n      + '?depth=8&blankNodes=false&relationshipType='\n      + relationshipType\n      + '&direction=INCOMING&entail=false'\n      + 'key=SB5jsflPjsQcmfPqB1zS3XuDNx3sfd19';\n    return this.http.get(uri, {responseType: 'json'});\n  }\n}\n\n\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\n\nimport * as d3 from 'd3';\nimport { AsctbCompareService } from 'src/app/services/asctb-compare.service';\n\n@Component({\n  selector: 'app-asctb-treemap-view',\n  templateUrl: './asctb-treemap-view.component.html',\n  styleUrls: ['./asctb-treemap-view.component.css']\n})\nexport class AsctbTreemapViewComponent implements OnInit, OnChanges {\n\n  @Input() asTree;\n\n  constructor(private asctbCompareService: AsctbCompareService) {\n  }\n\n  ngOnInit() {\n    \n  }\n\n  ngOnChanges(changes: SimpleChanges): void{\n    this.generateTreemap();\n  }\n\n\n  generateTreemap() {\n\n    //Short-circuit when no data is available\n    if(!this.asTree) return;\n\n    // Set the dimensions and margins of the diagram\n    var element = d3.select('#treemap-div').node();\n    let wWidth = element.getBoundingClientRect().width;\n    let wHeight = element.getBoundingClientRect().height;\n    \n    let heightDynamicScale = Math.ceil((this.asctbCompareService.countTotalAS / 50) * element.getBoundingClientRect().height);\n\n    wHeight = (wHeight > heightDynamicScale)?wHeight: heightDynamicScale;\n\n    var margin = {top: 0, right: 90, bottom: 0, left: 90},\n        width = wWidth - margin.left - margin.right,\n        height = wHeight - margin.top - margin.bottom;\n\n    d3.selectAll(\"#treemap-div > *\").remove();\n    var svg = d3.select(\"#treemap-div\").append(\"svg\")\n        .attr(\"width\", width + margin.right + margin.left)\n        .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n        .attr(\"transform\", \"translate(\"\n              + margin.left + \",\" + margin.top + \")\");\n\n    var i = 0,\n        duration = 750,\n        root;\n\n    // declares a tree layout and assigns the size\n    var treemap = d3.tree().size([height, width]);\n\n    // Assigns parent, children, height, depth\n    root = d3.hierarchy(this.asTree, function(d) {\n      return d.asAcyclicalChildren;\n      //return new Set([...d.asHubmapChildren, ...d.asSparcChildren, ...d.asSharedChildren]);\n    });\n\n    root.x0 = height / 2;\n    root.y0 = 0;\n\n    update(root);\n\n    function update(source) {\n\n      // Assigns the x and y position for the nodes\n      var treeData = treemap(root);\n\n      // Compute the new tree layout.\n      var nodes = treeData.descendants(),\n          links = treeData.descendants().slice(1);\n\n      // Normalize for fixed-depth.\n      nodes.forEach(function(d){ d.y = d.depth * 180});\n\n      // ****************** Nodes section ***************************\n\n      // Update the nodes...\n      var node = svg.selectAll('g.node')\n          .data(nodes, function(d) {return d.id || (d.id = ++i); });\n\n      // Enter any new modes at the parent's previous position.\n      var nodeEnter = node.enter().append('g')\n          .attr('class', 'node')\n          .attr(\"transform\", function(d) {\n            return \"translate(\" + source.y0 + \",\" + source.x0 + \")\";\n        })\n        .on('click', click);\n\n      // Shared = white\n      // Hubmap = blue\n      // Sparc = olive\n      let nodeFillColor = (node) =>{\n        if(node.data.sparcResident && node.data.hubmapResident) { return \"#fff\"; }\n        else if(!node.data.sparcResident && node.data.hubmapResident) { return \"rgb(144, 158, 121)\"; }\n        else { return \"rgb(69, 59, 134)\"; }\n      }\n\n      // Add Circle for the nodes\n      nodeEnter.append('circle')\n          .attr('class', (d)=>{\n            let classStr = 'node';\n              if(!d.data.sparcResident && d.data.hubmapResident) { classStr += \" hubmap\"; }\n              else if(d.data.sparcResident && !d.data.hubmapResident) { classStr += \" sparc\"; }\n            return classStr;\n          })\n          .attr('r', 1e-6)\n          .style(\"fill\", function(d) {\n            return nodeFillColor(d);\n          });\n\n      // Add labels for the nodes\n      nodeEnter.append('text')\n          .attr(\"dy\", \".35em\")\n          .attr(\"x\", function(d) {\n              return d.children || d._children ? -13 : 13;\n          })\n          .attr(\"text-anchor\", function(d) {\n              return d.children || d._children ? \"end\" : \"start\";\n          })\n          .text(function(d) { return d.data.name; });\n\n      // UPDATE\n      var nodeUpdate = nodeEnter.merge(node);\n\n      // Transition to the proper position for the node\n      nodeUpdate.transition()\n        .duration(duration)\n        .attr(\"transform\", function(d) { \n            return \"translate(\" + d.y + \",\" + d.x + \")\";\n        });\n\n      // Update the node attributes and style\n      nodeUpdate.select('circle.node')\n        .attr('r', 10)\n        .style(\"fill\", function(d) {\n            return nodeFillColor(d);\n        })\n        .attr('cursor', 'pointer');\n\n\n      // Remove any exiting nodes\n      var nodeExit = node.exit().transition()\n          .duration(duration)\n          .attr(\"transform\", function(d) {\n              return \"translate(\" + source.y + \",\" + source.x + \")\";\n          })\n          .remove();\n\n      // On exit reduce the node circles size to 0\n      nodeExit.select('circle')\n        .attr('r', 1e-6);\n\n      // On exit reduce the opacity of text labels\n      nodeExit.select('text')\n        .style('fill-opacity', 1e-6);\n\n      // ****************** links section ***************************\n\n      console.log('links');\n      console.dir(links);\n\n      var expandedLinks = [];\n      links.forEach(node => {\n        if(node.data.asParents.size > 1){ console.log('look for: ' + node.data.name + \", \" + node.data.id);}\n        node.data.asParents.forEach(parent => {\n          let nextNode = Object.assign({}, node);\n          nextNode.parent = parent;\n          expandedLinks.push(node);\n        });\n      });\n\n      console.log(\"expandedLinks\");\n      console.dir(expandedLinks);\n\n\n      // Update the links...\n      var link = svg.selectAll('path.link')\n          .data(expandedLinks, function(d) { return d.id; });\n\n\n      var linkEnter = link.enter().insert('path', \"g\")\n        .attr(\"class\", function(d){\n          let classesStr = \"link\";\n          if(d.parent.data.asSparcChildren.has(d.data)){ classesStr += \" sparc\" }\n          if(d.parent.data.asHubmapChildren.has(d.data)){ classesStr += \" hubmap\" }\n          return classesStr;\n        })\n        .attr('d', function(d){\n          var o = {x: source.x0, y: source.y0}\n          return diagonal(o, o)\n        });\n\n\n      // Update the links...\n      /*\n      var link = svg.selectAll('path.link')\n        .data(links, function(d) { return d.id; });\n\n      var linkEnter = link.enter().insert('path', \"g\")\n        .attr(\"class\", function(d){\n          let classesStr = \"link\";\n          if(d.parent.data.asSparcChildren.has(d.data)){ classesStr += \" sparc\" }\n          if(d.parent.data.asHubmapChildren.has(d.data)){ classesStr += \" hubmap\" }\n          return classesStr;\n        })\n        .attr('d', function(d){\n          var o = {x: source.x0, y: source.y0}\n          return diagonal(o, o)\n        });\n      */\n\n\n\n\n      // UPDATE\n      var linkUpdate = linkEnter.merge(link);\n\n      // Transition back to the parent element position\n      linkUpdate.transition()\n          .duration(duration)\n          .attr('d', function(d){ return diagonal(d, d.parent) });\n\n      // Remove any exiting links\n      var linkExit = link.exit().transition()\n          .duration(duration)\n          .attr('d', function(d) {\n            var o = {x: source.x, y: source.y}\n            return diagonal(o, o)\n          })\n          .remove();\n\n      // Store the old positions for transition.\n      nodes.forEach(function(d){\n        d.x0 = d.x;\n        d.y0 = d.y;\n      });\n\n      // Creates a curved (diagonal) path from parent to the child nodes\n      function diagonal(s, d) {\n\n        let path = `M ${s.y} ${s.x}\n                C ${(s.y + d.y) / 2} ${s.x},\n                  ${(s.y + d.y) / 2} ${d.x},\n                  ${d.y} ${d.x}`\n\n        return path\n      }\n\n      // Toggle children on click.\n      function click(event, d) {\n        if (d.children) {\n            d._children = d.children;\n            d.children = null;\n          } else {\n            d.children = d._children;\n            d._children = null;\n          }\n        update(d);\n      }\n    }\n\n\n\n\n  }\n}\n","<div id=\"treemap-div\" class=\"fixed-stage-height background-white\" fxFlex></div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { HttpClientModule } from '@angular/common/http';\n\n/* Directives */\n\n//import { VegaliteDirective } from './directives/vegalite.directive';\n\n/* Material components */\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatListModule} from '@angular/material/list';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatPaginatorModule} from '@angular/material/paginator';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './components/app.component';\nimport { MastComponent } from './components/mast/mast.component';\nimport { AsctbCompareComponent } from './components/asctb-compare/asctb-compare.component';\nimport { AsctbCompareSidebarComponent } from './components/asctb-compare/asctb-compare-sidebar/asctb-compare-sidebar.component';\nimport { AsctbTableViewComponent } from './components/asctb-compare/asctb-table-view/asctb-table-view.component';\nimport { AsctbTreeViewComponent } from './components/asctb-compare/asctb-tree-view/asctb-tree-view.component';\nimport { AsctbScatterplotViewComponent } from './components/asctb-compare/asctb-scatterplot-view/asctb-scatterplot-view.component';\nimport { AsctbTreemapViewComponent } from './components/asctb-compare/asctb-treemap-view/asctb-treemap-view.component';\nimport { ColorLegendComponent } from './components/asctb-compare/color-legend/color-legend.component';\nimport { AsctbGenerateComponent } from './components/asctb-generate/asctb-generate.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MastComponent,\n    AsctbCompareComponent,\n    AsctbCompareSidebarComponent,\n    AsctbTableViewComponent,\n    AsctbTreeViewComponent,\n    AsctbScatterplotViewComponent,\n    AsctbTreemapViewComponent,\n    ColorLegendComponent,\n    AsctbGenerateComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n\n    /* Material modules */\n    BrowserAnimationsModule,\n    MatCheckboxModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatButtonToggleModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { AsctbCompareService } from 'src/app/services/asctb-compare.service';\nimport * as d3 from 'd3';\n\n@Component({\n  selector: 'app-asctb-scatterplot-view',\n  templateUrl: './asctb-scatterplot-view.component.html',\n  styleUrls: ['./asctb-scatterplot-view.component.css']\n})\nexport class AsctbScatterplotViewComponent implements OnInit, OnChanges {\n\n  @Input() fdNodes;\n  @Input() fdEdges;\n\n  constructor(private asctbCompareService: AsctbCompareService) { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void{\n    this.generateForceDirected();\n  }\n\n  margin:{left:number, right:number, top:number, bottom:number};  \n  width:number;\n  height:number;\n  barHeight:number;\n  barWidth:number;\n  i:number;\n  duration:number;\n  tree;\n  root;\n  svg;\n\n\n\n  generateForceDirected() {\n    //Short-circuit when no data is available\n    if(!this.fdNodes || !this.fdEdges || !this.asctbCompareService) return;\n\n    // Set the dimensions and margins of the diagram\n    var element = d3.select('#forcedirected-div').node();\n    let wWidth = element.getBoundingClientRect().width;\n    let wHeight = element.getBoundingClientRect().height;\n    \n    //let heightDynamicScale = Math.ceil((this.asctbCompareService.countTotalAS / 50) * element.getBoundingClientRect().height);\n    //wHeight = (wHeight > heightDynamicScale)?wHeight: heightDynamicScale;\n\n    this.margin = {top: 80, right: 90, bottom: 60, left: 90};\n    this.width = wWidth - this.margin.right - this.margin.left;\n    this.height = wHeight - this.margin.top - this.margin.bottom;\n\n    d3.selectAll(\"#forcedirected-div > *\").remove();\n\n    this.svg = d3.select('#forcedirected-div').append('svg')\n      .attr('width', this.width + this.margin.right + this.margin.left)\n      .attr('height', this.height + this.margin.top + this.margin.bottom)\n      .append('g')\n      .attr('transform', 'translate(' + this.margin.left + ',' + this.margin.top + ')');\n\n    \n\n    var simulation = d3.forceSimulation()\n      .force(\"link\", d3.forceLink().id(function(d) { return d.id; }))\n      .force(\"charge\", d3.forceManyBody())\n      .force(\"center\", d3.forceCenter(this.width / 2, this.height / 2));\n\n    var edgeColor = (node) => {\n      if(node.group == 1) { return \"#ccc\"; } //Both\n      if(node.group == 2) { return \"rgb(144, 158, 121)\"; } //Hubmap\n      if(node.group == 3) { return \"darkslateblue\"; } //Sparc\n    }\n\n\n/*\n    .attr(\"class\", \"links\")\n    .attr('class', function(d){\n      let classesStr = \"link\";\n      if(d.parent.data.asSparcChildren.has(d.data)){ classesStr += \" sparc\" }\n      if(d.parent.data.asHubmapChildren.has(d.data)){ classesStr += \" hubmap\" }\n      return classesStr;\n    })\n    .attr('class', function(d){\n        console.dir(d);\n        let parentOrgan = this.asctbCompareService.mergedOrganIdx[d.target];\n        let childOrgan = this.asctbCompareService.mergedOrganIdx[d.source];\n        let classesStr = \"link\";\n        if(parentOrgan.asSparcChildren.has(childOrgan)){ classesStr += \" sparc\" }\n        if(parentOrgan.asHubmapChildren.has(childOrgan)){ classesStr += \" hubmap\" }\n        return classesStr;\n      })\n  */  \n\n    var link = this.svg.append(\"g\")\n      .attr(\"class\", \"link\")\n      .selectAll(\"line\")\n      .data(this.fdEdges)\n      .enter().append(\"line\")\n        .attr(\"stroke-width\", function(d) { return Math.sqrt(d.value); });\n\n\n    var nodeColor = (node) => {\n      if(node.group == 1) { return \"#ccc\"; } //Both\n      if(node.group == 2) { return \"rgb(144, 158, 121)\"; } //Hubmap\n      if(node.group == 3) { return \"darkslateblue\"; } //Sparc\n    }\n    \n\n\n\n\n    var g = this.svg.append(\"g\")\n      .attr(\"class\", \"nodes\");\n\n    var node_g = g\n    .selectAll(\"circle\")\n      .data(this.fdNodes)\n      .enter().append(\"g\");\n\n    var node = node_g.append(\"circle\")\n      .attr(\"r\", 5)\n      .attr(\"fill\", function(d) { return nodeColor(d); });\n\n    //this.svg.selectAll(\"g.nodes\")\n    node_g\n      .append(\"text\")\n      .text(function(d) { return d.organ.name; })\n      .attr('class','fd-text')\n      .attr('x', 6)\n      .attr('y', 3);\n\n    node.append(\"title\")\n        .text(function(d) { return d.id; });\n\n    simulation\n        .nodes(this.fdNodes)\n        .on(\"tick\", ticked);\n\n    simulation.force(\"link\")\n        .links(this.fdEdges);\n\n    function ticked() {\n      link\n          .attr(\"x1\", function(d) { return d.source.x; })\n          .attr(\"y1\", function(d) { return d.source.y; })\n          .attr(\"x2\", function(d) { return d.target.x; })\n          .attr(\"y2\", function(d) { return d.target.y; });\n  \n      node_g.attr(\"transform\", function(d) {\n        return \"translate(\" + d.x + \",\" + d.y + \")\";\n      });\n    }\n\n\n    //add zoom capabilities \n    var zoom_handler = d3.zoom()\n    .on(\"zoom\", (event, d)=>{\n      this.svg.attr(\"transform\", event.transform);\n    });\n    zoom_handler(d3.select('#forcedirected-div'))\n  \n    //Node dragging\n    node_g.call(\n      d3.drag()\n        .on(\"start\", dragstarted)\n        .on(\"drag\", dragged)\n        .on(\"end\", dragended)\n    );\n\n    function dragstarted(event, d) {\n      d3.select(this).classed(\"fixed\", d.fixed = true);\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      event.subject.fx = event.subject.x;\n      event.subject.fy = event.subject.y;\n    }\n    \n    function dragged(event) {\n      event.subject.fx = event.x;\n      event.subject.fy = event.y;\n    }\n    \n    function dragended(event) {\n      if (!event.active) simulation.alphaTarget(0);\n      event.subject.fx = null;\n      event.subject.fy = null;\n    }\n\n\n    \n  }\n}\n","<div id=\"forcedirected-div\" class=\"fixed-stage-height noscroll background-white\" fxFlex></div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-mast',\n  templateUrl: './mast.component.html',\n  styleUrls: ['./mast.component.css']\n})\nexport class MastComponent implements OnInit {\n\n  constructor(public router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <mat-toolbar>\n        <span>HuBMAP-SPARC</span>\n\n        <button mat-raised-button class=\"margin-left-100\" [ngClass]=\"{'selected': router.url === '/asctb-compare' || router.url === '/'}\" routerLink=\"asctb-compare\">\n            <mat-icon>collections_bookmark</mat-icon>\n            Partonomy Comparison\n        </button>\n        <button mat-raised-button class=\"margin-left-15\" [ngClass]=\"{'selected': router.url === '/asctb-generate'}\" routerLink=\"asctb-generate\">\n            <mat-icon>file_download</mat-icon>\n            ASCT+B File Export\n        </button>\n       \n        <span fxFlex></span>\n    </mat-toolbar>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-color-legend',\n  templateUrl: './color-legend.component.html',\n  styleUrls: ['./color-legend.component.css']\n})\nexport class ColorLegendComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"start start\">\n    <div class=\"margin-left-15\" fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"full-width\"><span class=\"big-text bold\">Legend</span></div>\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"margin-left-15 margin-top-5\">\n        <div class=\"sparc-box color-box\"></div>\n        <img width=\"50px\" class=\"sparc-logo margin-left-5\" src=\"assets/img/sparc-logo.svg\">\n    </div>\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"margin-left-15 margin-top-5\">\n        <div class=\"hubmap-box color-box\"></div>\n        <img width=\"50px\" class=\"hubmap-logo margin-left-5\" src=\"assets/img/hubmap-logo.svg\"> \n    </div>\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"margin-left-15 margin-top-5\">\n        <div class=\"shared-box color-box\"></div>\n        <img width=\"50px\" class=\"hubmap-logo margin-left-5\" src=\"assets/img/hubmap-logo.svg\">\n        &\n        <img width=\"50px\" class=\"sparc-logo\" src=\"assets/img/sparc-logo.svg\"> \n    </div>\n</div>","<div fxLayout=\"column\" fxLayoutAlign=\"space-around center\">\n    <mat-card fxFlex class=\"margin-top-25 half-screen\"  fxLayout=\"column\" fxLayoutAlign=\"center center\">\n        <div>\n            <h2>ASCT+B File Export</h2>\n            <p>\n                HuBMAP Anatomical Structures, Cell Types, and Biomarkers (ASCT+B) tables express the hierarchy of the anatomical human body structures, resident cell types, and identification biomarkers.\n                This module facilitates exporting SPARC partonomy data into the interoperable ASCT+B format which is compatible with HuBMAP consortium infrastructure, such as the <a target=\"_new\" href=\"https://hubmapconsortium.github.io/ccf-asct-reporter/\">ASCT+B Reporter</a>.\n            </p>\n        </div>\n\n        <form>\n            <div fxLayout=\"row\" fxLayoutAlign=\"start start\">\n                <mat-checkbox [(ngModel)]=\"selections.chooseFromList\" name=\"chooseFromList\">Choose organ from list</mat-checkbox>\n            </div>\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                <mat-form-field appearance=\"outline\" *ngIf=\"!selections.chooseFromList\">\n                    <mat-label>Sparc Organ Identifier</mat-label>\n                    <input matInput placeholder=\"Ex. UBERON:0000948\" [(ngModel)]=\"selections.inputOrganIdentifier\" name=\"inputOrganIdentifier\" required>\n                </mat-form-field>\n\n                <mat-form-field appearance=\"fill\" appearance=\"outline\" class=\"margin-top-10\" *ngIf=\"selections.chooseFromList\">\n                    <mat-label>Select an organ</mat-label>\n                    <mat-select [(ngModel)]=\"selections.selectedOrgan\" name=\"selectOrgan\" required>\n                        <mat-option *ngFor=\"let organType of asctbCompareService.organTypes\" [value]=\"organType\">\n                            {{organType.name}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n\n                <button mat-raised-button color=\"primary\" class=\"margin-left-10\" (click)=\"exportClick()\">\n                    <mat-icon>cloud_download</mat-icon>\n                    Export\n                </button>\n            </div>\n        </form>\n    </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AsctbCompareService } from 'src/app/services/asctb-compare.service';\n\n@Component({\n  selector: 'app-asctb-generate',\n  templateUrl: './asctb-generate.component.html',\n  styleUrls: ['./asctb-generate.component.css']\n})\nexport class AsctbGenerateComponent implements OnInit {\n\n  constructor(public asctbCompareService: AsctbCompareService) { }\n\n  public selections = {\n    chooseFromList: true,\n    inputOrganIdentifier: null, //Organ identifier from the input\n    selectedOrgan: null //Organ chosen from the select control\n  }\n\n  ngOnInit(): void {\n    if(this.asctbCompareService.organTypes && this.asctbCompareService.organTypes.length > 0){\n      this.selections.selectedOrgan = this.asctbCompareService.organTypes[0];\n    }\n  }\n\n  exportClick(): void {\n    console.log('export click event');\n    let organIdentifier = (this.selections.chooseFromList) ? \n      this.selections.selectedOrgan.id : this.selections.inputOrganIdentifier;\n    let fileName = organIdentifier+\".csv\"\n\n    //Short circuit if nothing was selected\n    if(!organIdentifier) return;\n\n    //@TODO\n    this.downloadFile(fileName);\n  }\n\n\n\n\n  /**************************************************************************************************************************\n   * Utility function to download a file. Adapted from:\n   * https://stackoverflow.com/questions/14964035/how-to-export-javascript-array-info-to-csv-on-client-side\n   **************************************************************************************************************************/\n  private downloadFile(fileName){\n    const rows = [\n      [\"name1\", \"city1\", \"some other info\"],\n      [\"name2\", \"city2\", \"more info\"]\n    ];\n  \n    let csvContent = \"data:text/csv;charset=utf-8,\" + rows.map(e => e.join(\",\")).join(\"\\n\");\n    var encodedUri = encodeURI(csvContent);\n    var link = document.createElement(\"a\");\n    link.setAttribute(\"href\", encodedUri);\n    link.setAttribute(\"download\", \"my_data.csv\");\n    document.body.appendChild(link); // Required for FF\n    link.click();\n  }\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"start center\" class=\"sidebar\" fxFlex>\n    <mat-form-field appearance=\"outline\">\n        <mat-label>Organ</mat-label>\n        <mat-select [(ngModel)]=\"asctbCompareService.selectedOrganType\" (ngModelChange)=\"asctbCompareService.loadOrganData()\">\n            <mat-option *ngFor=\"let organ of asctbCompareService.organTypes\" [value]=\"organ.id\">{{organ.name}}</mat-option>\n        </mat-select>\n    </mat-form-field>\n\n    <mat-selection-list \n        [(ngModel)]=\"asctbCompareService.selectedViewType\" \n        [multiple]=\"false\" \n        class=\"full-width\">\n\n\n        <mat-divider></mat-divider>\n        <mat-list-option [value]=\"'table'\" selected>\n            <mat-icon matListIcon>view_list</mat-icon>\n            Table view\n        </mat-list-option>\n        <mat-divider></mat-divider>\n        <mat-list-option [value]=\"'tree'\">\n            <mat-icon matListIcon>account_tree</mat-icon>\n            Tree view\n        </mat-list-option>\n        <mat-divider></mat-divider>\n        <mat-list-option [value]=\"'graph'\">\n            <mat-icon matListIcon>scatter_plot</mat-icon>\n            Graph view\n            <!--<mat-icon matListIcon>chevron_right</mat-icon>-->\n        </mat-list-option>\n        <mat-divider></mat-divider>\n        <mat-list-option [value]=\"'treemap'\">\n            <mat-icon matListIcon>timeline</mat-icon>\n            Treemap view\n            <!--<mat-icon matListIcon>chevron_right</mat-icon>-->\n        </mat-list-option>\n        <mat-divider></mat-divider>\n    </mat-selection-list>\n\n    <!-- Statistics card -->\n    <mat-card class=\"sidebar-card\" fxLayout=\"column\" fxLayoutAlign=\"start start\">\n        <table class=\"sidebar-table\">\n            <thead><tr><th colspan=\"2\">Organ statistics</th></tr></thead>\n            <tbody>\n                <tr>\n                    <td class=\"border-bottom\">Data status:</td>\n                    <td class=\"border-bottom\">\n                        <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                            <span class=\"bold\" [class]=\"{'color-green': asctbCompareService.dataLoadStatus === 'Ready', 'color-maroon': asctbCompareService.dataLoadStatus !== 'Ready'}\">\n                                {{asctbCompareService.dataLoadStatus}}\n                            </span>\n                            <span fxFlex></span>\n                            <mat-spinner diameter=\"15\" *ngIf=\"asctbCompareService.dataLoadStatus === 'Loading'\"></mat-spinner>\n                        </div>\n                    </td>\n                </tr>\n                <tr>\n                    <td>Anatomical structures:</td>\n                    <td>{{asctbCompareService.countTotalAS}}</td>\n                </tr>\n                <tr>\n                    <td>HuBMAP-only AS:</td>\n                    <td>{{asctbCompareService.countHubmapAS}}</td>\n                </tr>\n                <tr>\n                    <td>SPARC-only AS:</td>\n                    <td>{{asctbCompareService.countSparcAS}}</td>\n                </tr>\n                <tr>\n                    <td class=\"border-bottom\">Shared AS:</td>\n                    <td class=\"border-bottom\">{{asctbCompareService.countSharedAS}}</td>\n                </tr>\n                <tr>\n                    <td>HuBMAP-only AS links:</td>\n                    <td>{{asctbCompareService.countHubmapASLinks}}</td>\n                </tr>\n                <tr>\n                    <td>SPARC-only AS links:</td>\n                    <td>{{asctbCompareService.countSparcASLinks}}</td>\n                </tr>\n                <tr>\n                    <td>Shared AS links:</td>\n                    <td>{{asctbCompareService.countSharedASLinks}}</td>\n                </tr>\n\n            </tbody>\n        </table>\n    </mat-card>\n\n    <mat-card class=\"sidebar-card\" fxLayout=\"column\" fxLayoutAlign=\"start start\">\n        <app-color-legend></app-color-legend>\n    </mat-card>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { Organ } from 'src/app/interfaces/organ';\nimport { AsctbCompareService } from 'src/app/services/asctb-compare.service';\n\n@Component({\n  selector: 'app-asctb-compare-sidebar',\n  templateUrl: './asctb-compare-sidebar.component.html',\n  styleUrls: ['./asctb-compare-sidebar.component.css']\n})\nexport class AsctbCompareSidebarComponent implements OnInit {\n\n  constructor(public asctbCompareService: AsctbCompareService) {\n    \n  }\n\n  ngOnInit(): void {\n    //Execute initial load after render\n    this.asctbCompareService.loadOrganData();\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AsctbCompareComponent } from './components/asctb-compare/asctb-compare.component';\nimport { AsctbGenerateComponent } from './components/asctb-generate/asctb-generate.component';\n\nconst routes: Routes = [\n  { path: 'asctb-compare', component: AsctbCompareComponent },\n  { path: 'asctb-generate', component: AsctbGenerateComponent },\n  { path: '**', component: AsctbCompareComponent } //default\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}